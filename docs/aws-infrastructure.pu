@startuml AWS Infrastructure Diagram
!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v18.0/dist
!include AWSPuml/AWSCommon.puml
!include AWSPuml/Compute/EC2.puml
!include AWSPuml/Database/RDS.puml
!include AWSPuml/NetworkingContentDelivery/VPC.puml
!include AWSPuml/NetworkingContentDelivery/InternetGateway.puml
!include AWSPuml/NetworkingContentDelivery/RouteTable.puml
!include AWSPuml/SecurityIdentityCompliance/SecurityGroup.puml

!define CUSTOM_COLOR_VPC #E8F4FD
!define CUSTOM_COLOR_PUBLIC #D5E8D4
!define CUSTOM_COLOR_PRIVATE #FFE6CC

title AWS Infrastructure - CHAP Application

' VPC Container
package "AWS Region: ap-northeast-3" as region {
  ' VPC
  rectangle "VPC (10.0.0.0/16)" as vpc_box <<$VPCCard>> {
    
    ' Internet Gateway
    InternetGateway(igw, "Internet Gateway", "igw-000aa5b9823878e7d")
    
    ' Public Subnet
    rectangle "Public Subnet (10.0.1.0/24)" as public_subnet <<CUSTOM_COLOR_PUBLIC>> {
      EC2(ec2, "API Server", "t2.micro\nAmazon Linux 2\n56.155.98.63")
      note right of ec2
        **EC2 Instance Details:**
        - Instance ID: i-08e28edd6391df734
        - Private IP: 10.0.1.170
        - Public IP: 56.155.98.63
        - Key Pair: chap
        - Go API Application (Port 8080)
      end note
    }
    
    ' Private Subnets
    rectangle "Private Subnet A (10.0.2.0/24)" as private_subnet_a <<CUSTOM_COLOR_PRIVATE>> {
      note bottom
        **AZ:** ap-northeast-3a
        **Subnet ID:** subnet-090e175b959ff351c
      end note
    }
    
    rectangle "Private Subnet B (10.0.5.0/24)" as private_subnet_b <<CUSTOM_COLOR_PRIVATE>> {
      note bottom
        **AZ:** ap-northeast-3c
        **Subnet ID:** subnet-0635c416c764416dd
      end note
    }
    
    ' RDS Database
    RDS(rds, "PostgreSQL Database", "db.t3.micro\nPostgreSQL 17.2")
    
    ' Security Groups
    SecurityGroup(ec2_sg, "EC2 Security Group", "SSH (22) + API (8080)")
    SecurityGroup(rds_sg, "RDS Security Group", "PostgreSQL (5432)")
    
    ' Route Table
    RouteTable(public_rt, "Public Route Table", "0.0.0.0/0 â†’ IGW")
  }
}

' External connections
cloud "Internet" as internet

' Connections
internet --> igw : "HTTPS/HTTP"
igw --> ec2 : "Traffic"
ec2 --> rds : "Database\nConnection\n(PostgreSQL)"
ec2_sg --> ec2 : "Protects"
rds_sg --> rds : "Protects"
public_rt --> public_subnet : "Routes"
rds --|> private_subnet_a : "Multi-AZ\nDeployment"
rds --|> private_subnet_b : "Multi-AZ\nDeployment"

' Notes
note as infrastructure_note
**Infrastructure Summary:**
- **VPC ID:** vpc-0424a6dde1f0399ba
- **RDS Endpoint:** terraform-20250725215706850000000002.cta6geu24oet.ap-northeast-3.rds.amazonaws.com:5432
- **Database Name:** appdb
- **Database User:** uzak
- **Region:** ap-northeast-3 (Asia Pacific - Osaka)

**Security Configuration:**
- EC2 allows SSH (22) and API (8080) from anywhere
- RDS only accepts connections from EC2 security group
- RDS is in private subnets (no internet access)
- EC2 is in public subnet (internet accessible)
end note

@enduml
