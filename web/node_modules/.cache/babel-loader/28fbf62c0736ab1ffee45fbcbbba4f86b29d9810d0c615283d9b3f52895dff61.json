{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  notifications: [],\n  unreadCount: 0,\n  isLoading: false\n};\nconst notificationsSlice = createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n    setNotifications: (state, action) => {\n      state.notifications = action.payload;\n      state.unreadCount = action.payload.filter(n => !n.isRead).length;\n    },\n    addNotification: (state, action) => {\n      state.notifications.unshift(action.payload);\n      if (!action.payload.isRead) {\n        state.unreadCount += 1;\n      }\n    },\n    markAsRead: (state, action) => {\n      const notification = state.notifications.find(n => n.id === action.payload);\n      if (notification && !notification.isRead) {\n        notification.isRead = true;\n        state.unreadCount -= 1;\n      }\n    },\n    markAllAsRead: state => {\n      state.notifications.forEach(n => n.isRead = true);\n      state.unreadCount = 0;\n    }\n  }\n});\nexport const {\n  setLoading,\n  setNotifications,\n  addNotification,\n  markAsRead,\n  markAllAsRead\n} = notificationsSlice.actions;\nexport default notificationsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","notifications","unreadCount","isLoading","notificationsSlice","name","reducers","setLoading","state","action","payload","setNotifications","filter","n","isRead","length","addNotification","unshift","markAsRead","notification","find","id","markAllAsRead","forEach","actions","reducer"],"sources":["C:/Users/PCUSER/VScode-project/CHAP/web/src/store/slices/notificationsSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface Notification {\r\n  id: string;\r\n  type: 'reaction' | 'comment' | 'admin' | 'event';\r\n  title: string;\r\n  message: string;\r\n  isRead: boolean;\r\n  createdAt: string;\r\n  data?: any;\r\n}\r\n\r\ninterface NotificationsState {\r\n  notifications: Notification[];\r\n  unreadCount: number;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst initialState: NotificationsState = {\r\n  notifications: [],\r\n  unreadCount: 0,\r\n  isLoading: false,\r\n};\r\n\r\nconst notificationsSlice = createSlice({\r\n  name: 'notifications',\r\n  initialState,\r\n  reducers: {\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n    setNotifications: (state, action: PayloadAction<Notification[]>) => {\r\n      state.notifications = action.payload;\r\n      state.unreadCount = action.payload.filter(n => !n.isRead).length;\r\n    },\r\n    addNotification: (state, action: PayloadAction<Notification>) => {\r\n      state.notifications.unshift(action.payload);\r\n      if (!action.payload.isRead) {\r\n        state.unreadCount += 1;\r\n      }\r\n    },\r\n    markAsRead: (state, action: PayloadAction<string>) => {\r\n      const notification = state.notifications.find(n => n.id === action.payload);\r\n      if (notification && !notification.isRead) {\r\n        notification.isRead = true;\r\n        state.unreadCount -= 1;\r\n      }\r\n    },\r\n    markAllAsRead: (state) => {\r\n      state.notifications.forEach(n => n.isRead = true);\r\n      state.unreadCount = 0;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setLoading, setNotifications, addNotification, markAsRead, markAllAsRead } = notificationsSlice.actions;\r\nexport default notificationsSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAkB7D,MAAMC,YAAgC,GAAG;EACvCC,aAAa,EAAE,EAAE;EACjBC,WAAW,EAAE,CAAC;EACdC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,kBAAkB,GAAGL,WAAW,CAAC;EACrCM,IAAI,EAAE,eAAe;EACrBL,YAAY;EACZM,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO;IAClC,CAAC;IACDC,gBAAgB,EAAEA,CAACH,KAAK,EAAEC,MAAqC,KAAK;MAClED,KAAK,CAACP,aAAa,GAAGQ,MAAM,CAACC,OAAO;MACpCF,KAAK,CAACN,WAAW,GAAGO,MAAM,CAACC,OAAO,CAACE,MAAM,CAACC,CAAC,IAAI,CAACA,CAAC,CAACC,MAAM,CAAC,CAACC,MAAM;IAClE,CAAC;IACDC,eAAe,EAAEA,CAACR,KAAK,EAAEC,MAAmC,KAAK;MAC/DD,KAAK,CAACP,aAAa,CAACgB,OAAO,CAACR,MAAM,CAACC,OAAO,CAAC;MAC3C,IAAI,CAACD,MAAM,CAACC,OAAO,CAACI,MAAM,EAAE;QAC1BN,KAAK,CAACN,WAAW,IAAI,CAAC;MACxB;IACF,CAAC;IACDgB,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAA6B,KAAK;MACpD,MAAMU,YAAY,GAAGX,KAAK,CAACP,aAAa,CAACmB,IAAI,CAACP,CAAC,IAAIA,CAAC,CAACQ,EAAE,KAAKZ,MAAM,CAACC,OAAO,CAAC;MAC3E,IAAIS,YAAY,IAAI,CAACA,YAAY,CAACL,MAAM,EAAE;QACxCK,YAAY,CAACL,MAAM,GAAG,IAAI;QAC1BN,KAAK,CAACN,WAAW,IAAI,CAAC;MACxB;IACF,CAAC;IACDoB,aAAa,EAAGd,KAAK,IAAK;MACxBA,KAAK,CAACP,aAAa,CAACsB,OAAO,CAACV,CAAC,IAAIA,CAAC,CAACC,MAAM,GAAG,IAAI,CAAC;MACjDN,KAAK,CAACN,WAAW,GAAG,CAAC;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,UAAU;EAAEI,gBAAgB;EAAEK,eAAe;EAAEE,UAAU;EAAEI;AAAc,CAAC,GAAGlB,kBAAkB,CAACoB,OAAO;AACtH,eAAepB,kBAAkB,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}