openapi: 3.0.0
info:
  title: CHAP API
  version: "1.0"
  description: CHAPアプリのAPI仕様書

servers:
  - url: https://api.chap-app.jp/api/v1

paths:
  /auth/login:
    post:
      summary: ログイン
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: ログイン成功。JWTトークンとユーザー情報を返す。
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                user:
                  id: "28cc2fbd-dbed-4be4-9546-21d89c1987ff"
                  name: "a"
                  email: "kazuki175209@gmail.com"
                  image: ""
                  created_at: "2025-08-21T08:24:27.538172Z"
                  valid: true
                  login_type: "email"

  /auth/register:
    post:
      summary: ユーザー登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: 登録成功。JWTトークンと新規ユーザー情報を返す。
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                user:
                  id: "28cc2fbd-dbed-4be4-9546-21d89c1987ff"
                  name: "a"
                  email: "kazuki175209@gmail.com"
                  image: ""
                  created_at: "2025-08-21T08:24:27.538172Z"
                  valid: true
                  login_type: "email"

  /auth/google:
    post:
      summary: Googleログイン
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                email:
                  type: string
                name:
                  type: string
      responses:
        '200':
          description: Googleログイン成功。JWTトークンとユーザー情報を返す。
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
              example:
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                user:
                  id: "28cc2fbd-dbed-4be4-9546-21d89c1987ff"
                  name: "a"
                  email: "kazuki175209@gmail.com"
                  image: ""
                  created_at: "2025-08-21T08:24:27.538172Z"
                  valid: true
                  login_type: "google"

  /auth/me:
    get:
      summary: 現在のユーザー情報取得
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 現在のユーザー情報を返す。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                id: "28cc2fbd-dbed-4be4-9546-21d89c1987ff"
                name: "a"
                email: "kazuki175209@gmail.com"
                image: ""
                created_at: "2025-08-21T08:24:27.538172Z"
                valid: true
                login_type: "email"

  /auth/logout:
    post:
      summary: ログアウト
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ログアウト成功。メッセージを返す。
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "logged out successfully"

  /user/{id}:
    get:
      summary: ユーザー情報取得
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 指定IDのユーザー情報を返す。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                id: "28cc2fbd-dbed-4be4-9546-21d89c1987ff"
                name: "a"
                email: "kazuki175209@gmail.com"
                image: ""
                created_at: "2025-08-21T08:24:27.538172Z"
                valid: true
                login_type: "email"

  /getall/thread:
    post:
      summary: スレッド一覧取得
      responses:
        '200':
          description: スレッド一覧を返す。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Thread'
              example:
                - id: "thread1"
                  content: "スレッド内容"
                  user_id: "user1"
                  created_at: "2025-08-21T08:24:27.538172Z"
                  like: 3
                - id: "thread2"
                  content: "別のスレッド"
                  user_id: "user2"
                  created_at: "2025-08-22T10:00:00.000000Z"
                  like: 1

  /thread/{id}/details:
    get:
      summary: スレッド詳細取得
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: スレッド本体とレス一覧を返す。
          content:
            application/json:
              schema:
                type: object
                properties:
                  thread:
                    $ref: '#/components/schemas/Thread'
                  replies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
              example:
                thread:
                  id: "thread1"
                  content: "スレッド内容"
                  user_id: "user1"
                  created_at: "2025-08-21T08:24:27.538172Z"
                  like: 3
                replies:
                  - id: "post1"
                    content: "最初のレス"
                    user_id: "user2"
                    created_at: "2025-08-21T09:00:00.000000Z"
                    like: 0
                    valid: true
                    tags: []
                  - id: "post2"
                    content: "2番目のレス"
                    user_id: "user3"
                    created_at: "2025-08-21T09:10:00.000000Z"
                    like: 1
                    valid: true
                    tags: ["tag1"]

  /thread/{id}/reply:
    post:
      summary: スレッドへのレス投稿
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                valid:
                  type: boolean
                like:
                  type: integer
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: レス投稿成功。投稿内容を返す。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
              example:
                id: "post1"
                content: "最初のレス"
                user_id: "user2"
                created_at: "2025-08-21T09:00:00.000000Z"
                like: 0
                valid: true
                tags: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        image:
          type: string
        created_at:
          type: string
        valid:
          type: boolean
        login_type:
          type: string

    Thread:
      type: object
      properties:
        id:
          type: string
        content:
          type: string
        user_id:
          type: string
        created_at:
          type: string
        like:
          type: integer

    Post:
      type: object
      properties:
        id:
          type: string
        content:
          type: string
        user_id:
          type: string
        created_at:
          type: string
        like:
          type: integer
        valid:
          type: boolean
        tags:
          type: array
          items:
            type: string
