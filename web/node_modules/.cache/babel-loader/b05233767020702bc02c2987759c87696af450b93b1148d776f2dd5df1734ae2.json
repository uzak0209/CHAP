{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: {\n    id: 'temp-user-1',\n    email: 'test@example.com',\n    displayName: 'テストユーザー',\n    photoURL: '',\n    isAdmin: false\n  },\n  isAuthenticated: true,\n  // 開発用に一時的にtrueに設定\n  isLoading: false,\n  error: null,\n  inviteCode: ''\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.isLoading = action.payload;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = !!action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    setInviteCode: (state, action) => {\n      state.inviteCode = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n      state.isAuthenticated = false;\n      state.error = null;\n    }\n  }\n});\nexport const {\n  setLoading,\n  setUser,\n  setError,\n  setInviteCode,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","user","id","email","displayName","photoURL","isAdmin","isAuthenticated","isLoading","error","inviteCode","authSlice","name","reducers","setLoading","state","action","payload","setUser","setError","setInviteCode","logout","actions","reducer"],"sources":["C:/Users/PCUSER/VScode-project/CHAP/web/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  displayName: string;\r\n  photoURL?: string;\r\n  isAdmin: boolean;\r\n}\r\n\r\ninterface AuthState {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  inviteCode: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  user: {\r\n    id: 'temp-user-1',\r\n    email: 'test@example.com',\r\n    displayName: 'テストユーザー',\r\n    photoURL: '',\r\n    isAdmin: false,\r\n  },\r\n  isAuthenticated: true, // 開発用に一時的にtrueに設定\r\n  isLoading: false,\r\n  error: null,\r\n  inviteCode: '',\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n    setUser: (state, action: PayloadAction<User | null>) => {\r\n      state.user = action.payload;\r\n      state.isAuthenticated = !!action.payload;\r\n    },\r\n    setError: (state, action: PayloadAction<string | null>) => {\r\n      state.error = action.payload;\r\n    },\r\n    setInviteCode: (state, action: PayloadAction<string>) => {\r\n      state.inviteCode = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.isAuthenticated = false;\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setLoading, setUser, setError, setInviteCode, logout } = authSlice.actions;\r\nexport default authSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAkB7D,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE;IACJC,EAAE,EAAE,aAAa;IACjBC,KAAK,EAAE,kBAAkB;IACzBC,WAAW,EAAE,SAAS;IACtBC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE;EACX,CAAC;EACDC,eAAe,EAAE,IAAI;EAAE;EACvBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,MAAM;EACZZ,YAAY;EACZa,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAACP,SAAS,GAAGQ,MAAM,CAACC,OAAO;IAClC,CAAC;IACDC,OAAO,EAAEA,CAACH,KAAK,EAAEC,MAAkC,KAAK;MACtDD,KAAK,CAACd,IAAI,GAAGe,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACR,eAAe,GAAG,CAAC,CAACS,MAAM,CAACC,OAAO;IAC1C,CAAC;IACDE,QAAQ,EAAEA,CAACJ,KAAK,EAAEC,MAAoC,KAAK;MACzDD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDG,aAAa,EAAEA,CAACL,KAAK,EAAEC,MAA6B,KAAK;MACvDD,KAAK,CAACL,UAAU,GAAGM,MAAM,CAACC,OAAO;IACnC,CAAC;IACDI,MAAM,EAAGN,KAAK,IAAK;MACjBA,KAAK,CAACd,IAAI,GAAG,IAAI;MACjBc,KAAK,CAACR,eAAe,GAAG,KAAK;MAC7BQ,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,UAAU;EAAEI,OAAO;EAAEC,QAAQ;EAAEC,aAAa;EAAEC;AAAO,CAAC,GAAGV,SAAS,CAACW,OAAO;AACzF,eAAeX,SAAS,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}